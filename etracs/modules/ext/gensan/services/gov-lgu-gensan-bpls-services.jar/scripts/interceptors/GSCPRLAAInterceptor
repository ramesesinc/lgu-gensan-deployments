import com.rameses.annotations.*;

class GSCPRLAAInterceptor {
	
	@ActiveDB('gsc_prlaa') 
	def prlaa_db;

	@ActiveDB(value="gsc_prlaa_tracs", em="tracsdb")
	def prlaa_tracs_db;


	@After( pattern="BPInfoRuleService.execute") 
	public void afterExecute( evt ) { 
		def result = evt.result;
		if ( !result.infos ) return; 

		def param = evt.args[0]; 
		def businessid = param?.business?.objid; 
		def grosscaps = prlaa_db.getLobGrossCap([ businessid: businessid ]); 
		grosscaps = grosscaps.findAll{( it.grosscap > 0 )} 
		if ( !grosscaps && prlaa_tracs_db ) {
			grosscaps = prlaa_tracs_db.getLobGrossCap([ businessid: businessid ]); 
			grosscaps.each{
				it.capital = 0.0; 
				it.gross = (it.gross ? it.gross : 0.0); 
				it.grosscap = it.gross + it.capital; 

				def lobinfo = prlaa_db.findLob([ objid: it.lobid ]); 
				it.lobclassid = lobinfo?.classification?.objid;
			}
			grosscaps = grosscaps.findAll{( it.grosscap > 0 )} 
		}

		result.infos.findAll{( it.attribute?.objid == 'PRLAA_GROSS' )}.each{ aa-> 
			aa.defaultvalue = 0.00;
			aa.editable = false;
                     aa.enabled = false;
			aa.useDefaultOnly = true;
			def gc = grosscaps.find{( it.lobid == aa.lob?.objid )} 
			if ( gc?.grosscap ) {
				aa.defaultvalue = gc.grosscap; 
				def rateinfo = lob_class_rates.find{( it.id == gc.lobclassid )} 
				if ( rateinfo ) {
					def rate = (gc.grosscap > rateinfo.boundary ? rateinfo.uprate : rateinfo.lowrate); 
					if ( rate ) aa.defaultvalue = gc.grosscap * rate; 
				}

				rateinfo = prlaa_db.findAttribute([ lobid: gc.lobid ]); 
				if ( rateinfo?.rate ) { 
					aa.defaultvalue = gc.grosscap * rateinfo.rate; 
				} 
			} 
		} 
	} 


	@After( pattern="BusinessAssessmentService.assess") 
	public void afterAssess( evt ) {
		def result = evt.result; 
		if ( !result?.infos ) return; 

		def param = evt.args[0]; 
		def applicationid = param.objid; 
		def grosslist = prlaa_db.getGross([ applicationid : applicationid ]);

		result.infos.findAll{( it.attribute?.objid == 'GROSS' )}.each{ aa-> 
			def grossinfo = grosslist.find{( it.lobid == aa.lob?.objid )}
			def declaredgross = (grossinfo?.declaredgross ? grossinfo.declaredgross : 0.0);
			def prlaagross = (grossinfo?.gross ? grossinfo.gross : 0.0);  
			def gross = Math.max( declaredgross, prlaagross ); 
			if ( gross > 0 ) aa.defaultvalue = gross; 
		}
	}


	final def lob_class_rates = [
		[id: 'MANUFACTURER', lowrate: 1.15, uprate: 1.05, boundary: 12000000.00], 
		[id: 'WHOLESALER', lowrate: 1.15, uprate: 1.05, boundary: 3000000.00], 
		[id: 'RETAILER', lowrate: 1.15, uprate: 1.05, boundary: 3000000.00], 
		[id: 'CONTRACTOR', lowrate: 1.15, uprate: 1.05, boundary: 2000000.00], 
		[id: 'SERVICE', lowrate: 1.15, uprate: 1.05, boundary: 2000000.00], 
		[id: 'OTHER', lowrate: 1.15, uprate: 1.05, boundary: 200000.00] 
	]; 

}